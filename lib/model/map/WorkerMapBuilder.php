<?php


/**
 * This class adds structure of 'worker' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Aug 12 17:56:38 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class WorkerMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.WorkerMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(WorkerPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(WorkerPeer::TABLE_NAME);
		$tMap->setPhpName('Worker');
		$tMap->setClassname('Worker');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('SURNAME', 'Surname', 'VARCHAR', true, 120);

		$tMap->addColumn('NAME', 'Name', 'VARCHAR', true, 80);

		$tMap->addColumn('FATHER', 'Father', 'VARCHAR', false, 80);

		$tMap->addColumn('AGE', 'Age', 'INTEGER', true, null);

		$tMap->addColumn('GENDER', 'Gender', 'INTEGER', true, null);

		$tMap->addForeignKey('CITIZENSHIP_ID', 'CitizenshipId', 'INTEGER', 'citizenship', 'ID', false, null);

		$tMap->addForeignKey('REGION_ID', 'RegionId', 'INTEGER', 'region', 'ID', false, null);

		$tMap->addColumn('ADDRESS', 'Address', 'VARCHAR', false, 255);

		$tMap->addColumn('PHONE', 'Phone', 'VARCHAR', false, 30);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 64);

		$tMap->addColumn('TARGET_REGIONS', 'TargetRegions', 'VARCHAR', false, 255);

		$tMap->addForeignKey('BRANCH_ID', 'BranchId', 'INTEGER', 'branch', 'ID', false, null);

		$tMap->addForeignKey('SPECIALITY_ID', 'SpecialityId', 'INTEGER', 'speciality', 'ID', false, null);

		$tMap->addColumn('SALARY', 'Salary', 'INTEGER', false, null);

		$tMap->addColumn('SCHEDULE', 'Schedule', 'VARCHAR', false, 64);

		$tMap->addForeignKey('JOB_TYPE_ID', 'JobTypeId', 'INTEGER', 'job_type', 'ID', false, null);

		$tMap->addColumn('START_DATE', 'StartDate', 'DATE', false, null);

		$tMap->addColumn('NEED_PLACE', 'NeedPlace', 'INTEGER', false, null);

		$tMap->addColumn('HAS_PERMISSION', 'HasPermission', 'INTEGER', false, null);

		$tMap->addColumn('NEED_REGISTRATION', 'NeedRegistration', 'INTEGER', false, null);

		$tMap->addColumn('LANGUAGES', 'Languages', 'VARCHAR', false, 255);

		$tMap->addColumn('COMPUTER', 'Computer', 'VARCHAR', false, 255);

		$tMap->addColumn('ADDITIONAL_INFO', 'AdditionalInfo', 'LONGVARCHAR', false, null);

		$tMap->addColumn('PASSWORD', 'Password', 'VARCHAR', false, 32);

	} // doBuild()

} // WorkerMapBuilder
